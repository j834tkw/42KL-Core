1. Introduction to Inception and Docker

1.1 What is Docker and how does it work
Docker is a way to build and run containers. Containers are something like a virtual machine, it has its operating system and all, except that unlike 
virtual machines they donâ€™t simulate the entire computer, but rather create a sand boxed environment that pretends to be a virtual machine

1.2 What is docker compose and how does it work
Docker Compose is a way to create reproducible Docker containers using a config file instead of extremely long Docker commands. Docker Compose uses a 
config file structure called YAML. YAML is similar to JSON or HTML in that YAML is a structured, machine-readable language. It also allows us to start, 
stop, and manage multiple services together easily.

1.3 Difference between a Docker image used with docker compose and without docker compose.
Without:
	- Need to manually build or pull docker images
	- Can only run a single container using docker run
	- Need to manually link containers and configure networks and volumes
With:
	- All the above processes can be automated
	- Easier to manage too

1.4 The benefit of Docker compared to VMs
Lightweight: Docker containers share the host system's kernel and do not require a full operating system for each container
Portability: Docker containers can run on any system that supports Docker, without worrying about the underlying infrastructure
Speed of Development: Containers can be quickly created, modified, and discarded

1.5 The pertinence of the directory structure required for this project
It is crucial to organizing your code and configuration files in a way that maintains clarity and separation of concerns. Thus providing easier 
management as files and folders can be located easily

2. Docker networks

2.1 What is a docker networks
Docker networks configure communications between neighboring containers and external services. When you define a network, only containers that 
are connected to that network can communicate with each other, This provides isolation and security. Common networks include:
	- bridge: default network type. Allows isolated communication between containers on the same network
	- host: allows containers to share the host's network
	- none: no network. Used for containers where networking is unnecessary

3. MariaDB

3.1 Login to the database
Run the following command in your vm (wsl)
- docker exec -it srcs-mariadb-1 mysql -u root -p
	- replace srcs-mariadb-1 with the container name
This should bring you into the database terminal. Running the following commands should show a list of registered users on mariadb.
- show databases;
- show tables;
- select * from wp_users;

4. WordPress

4.1 -

5. NGINX with SSL/TLS

5.1 Domain names
https://login.42.fr/ (where login is the student's login) when typed into the browser will be redirected into 127.0.0.1, the same goes to localhost. 
To achieve this in wsl, we need to edit the etc/hosts file in windows, not in linux.

5.2 TLS v1.3
TLS 1.3 is the latest version of the TLS protocol, a widely adopted security protocol designed to facilitate privacy and data security for 
communications over the Internet, which is used by HTTPS. It is the modern version of SSL.

6. Persistence

6.1 Shutting down wsl
The command below can shut down wsl when run in the wsl terminal
	wsl.exe --shutdown
After restarting everything and running sudo make start, the previous changes still remain. This is because of Docker volumes. They persist 
data generated by and used by Docker containers. If the volumes are deleted, then the data will be lost.
